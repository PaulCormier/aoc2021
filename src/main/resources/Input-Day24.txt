# 1
inp w
mul x 0  # Clear x
add x z  # Load z into x (z=0, x=0)
mod x 26 # Make sure x is a number from 0 to 25
div z 1  # Nothing?
add x 10
eql x w
eql x 0
mul y 0  # Clear y
add y 25
mul y x
add y 1  # If y is 0, this makes sure not to wipe out z on the next line.
mul z y
mul y 0  # Clear y
add y w
add y 1
mul y x
add z y
# Returns w + 1 : 2-10

#2
inp w
mul x 0  # Clear x
add x z  # Load z into x
mod x 26 # Make sure x is a number from 0 to 25
div z 1  # Nothing?
add x 11
eql x w
eql x 0
mul y 0  # Clear y
add y 25
mul y x
add y 1  # If y is 0, this makes sure not to wipe out z on the next line.
mul z y
mul y 0  # Clear y
add y w
add y 9
mul y x
add z y

#3
inp w
mul x 0  # Clear x
add x z  # Load z into x
mod x 26 # Make sure x is a number from 0 to 25
div z 1  # Nothing?
add x 14
eql x w
eql x 0
mul y 0  # Clear y
add y 25
mul y x
add y 1  # If y is 0, this makes sure not to wipe out z on the next line.
mul z y
mul y 0  # Clear y
add y w
add y 12
mul y x
add z y

#4
inp w
mul x 0  # Clear x
add x z  # Load z into x
mod x 26 # Make sure x is a number from 0 to 25
div z 1  # Nothing?
add x 13
eql x w
eql x 0
mul y 0  # Clear y
add y 25
mul y x
add y 1  # If y is 0, this makes sure not to wipe out z on the next line.
mul z y
mul y 0  # Clear y
add y w
add y 6
mul y x
add z y

#5
inp w
mul x 0  # Clear x
add x z  # Load z into x
mod x 26 # Make sure x is a number from 0 to 25
div z 26
add x -6
eql x w
eql x 0
mul y 0  # Clear y
add y 25
mul y x
add y 1  # If y is 0, this makes sure not to wipe out z on the next line.
mul z y
mul y 0  # Clear y
add y w
add y 9
mul y x
add z y

#6
inp w
mul x 0  # Clear x
add x z  # Load z into x
mod x 26 # Make sure x is a number from 0 to 25
div z 26
add x -14
eql x w
eql x 0
mul y 0  # Clear y
add y 25
mul y x
add y 1  # If y is 0, this makes sure not to wipe out z on the next line.
mul z y
mul y 0  # Clear y
add y w
add y 15
mul y x
add z y

#7
inp w
mul x 0  # Clear x
add x z  # Load z into x
mod x 26 # Make sure x is a number from 0 to 25
div z 1  # Nothing?
add x 14
eql x w
eql x 0
mul y 0  # Clear y
add y 25
mul y x
add y 1  # If y is 0, this makes sure not to wipe out z on the next line.
mul z y
mul y 0  # Clear y
add y w
add y 7
mul y x
add z y

#8
inp w
mul x 0  # Clear x
add x z  # Load z into x
mod x 26 # Make sure x is a number from 0 to 25
div z 1  # Nothing?
add x 13
eql x w
eql x 0
mul y 0  # Clear y
add y 25
mul y x
add y 1  # If y is 0, this makes sure not to wipe out z on the next line.
mul z y
mul y 0  # Clear y
add y w
add y 12
mul y x
add z y

#9
inp w
mul x 0  # Clear x
add x z  # Load z into x
mod x 26 # Make sure x is a number from 0 to 25
div z 26
add x -8
eql x w
eql x 0
mul y 0  # Clear y
add y 25
mul y x
add y 1  # If y is 0, this makes sure not to wipe out z on the next line.
mul z y
mul y 0  # Clear y
add y w
add y 15
mul y x
add z y

#10
inp w
mul x 0  # Clear x
add x z  # Load z into x
mod x 26 # Make sure x is a number from 0 to 25
div z 26
add x -15
eql x w
eql x 0
mul y 0  # Clear y
add y 25
mul y x
add y 1  # If y is 0, this makes sure not to wipe out z on the next line.
mul z y
mul y 0  # Clear y
add y w
add y 3
mul y x
add z y

#11
inp w
mul x 0  # Clear x
add x z  # Load z into x
mod x 26 # Make sure x is a number from 0 to 25
div z 1  # Nothing?
add x 10
eql x w
eql x 0
mul y 0  # Clear y
add y 25
mul y x
add y 1  # If y is 0, this makes sure not to wipe out z on the next line.
mul z y
mul y 0  # Clear y
add y w
add y 6
mul y x
add z y

#12
inp w
mul x 0  # Clear x
add x z  # Load z into x
mod x 26 # Make sure x is a number from 0 to 25
div z 26
add x -11
eql x w
eql x 0
mul y 0  # Clear y
add y 25
mul y x
add y 1  # If y is 0, this makes sure not to wipe out z on the next line.
mul z y
mul y 0  # Clear y
add y w
add y 2
mul y x
add z y

#13
inp w
mul x 0  # Clear x
add x z  # Load z into x
mod x 26 # Make sure x is a number from 0 to 25
div z 26
add x -13
eql x w
eql x 0
mul y 0  # Clear y
add y 25
mul y x
add y 1  # If y is 0, this makes sure not to wipe out z on the next line.
mul z y
mul y 0  # Clear y
add y w
add y 10
mul y x
add z y

#14
inp w
mul x 0  # Clear x
add x z  # Load z into x (What does z equal here?)
mod x 26 # Make sure x is a number from 0 to 25
div z 26 # If z<26, z=0 otherwise z>0
add x -4 # x=(-4)-21
eql x w  # For x to be 0, w!=z%26-4
eql x 0  # x=1|0 - Seems best to have x!=0 here so that y=0 on line 264
mul y 0  # Clear y
add y 25 # y=25
mul y x  # y=25|0
add y 1  # y=26|1
mul z y  # 
mul y 0  # Clear y
add y w  # Load w into y; 1-9
add y 12 # y must be 13-21
mul y x  # x must be 0, or -z/y
add z y  # y must be 0, or -z
# If z is 0 at this point, it's a valid serial number.

# Apparently 45199191516111 is wrong